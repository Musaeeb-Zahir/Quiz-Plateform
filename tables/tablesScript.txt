-- ===== DROP OLD OBJECTS =====
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE RESULTS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE QUESTIONS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE QUIZZES CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE STUDENTS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP SEQUENCE student_seq';
    EXECUTE IMMEDIATE 'DROP SEQUENCE quiz_seq';
    EXECUTE IMMEDIATE 'DROP SEQUENCE question_seq';
    EXECUTE IMMEDIATE 'DROP SEQUENCE result_seq';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

-- ===== CREATE STUDENTS TABLE =====
CREATE TABLE STUDENTS (
    student_id NUMBER PRIMARY KEY,
    name VARCHAR2(100),
    email VARCHAR2(100) UNIQUE,
    password VARCHAR2(100)
);
CREATE SEQUENCE student_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER trg_student_id
BEFORE INSERT ON STUDENTS
FOR EACH ROW
BEGIN
    SELECT student_seq.NEXTVAL INTO :NEW.student_id FROM dual;
END;
/

-- ===== CREATE QUIZZES TABLE =====
CREATE TABLE QUIZZES (
    quiz_id NUMBER PRIMARY KEY,
    quiz_title VARCHAR2(100),
    duration_minutes NUMBER
);
CREATE SEQUENCE quiz_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER trg_quiz_id
BEFORE INSERT ON QUIZZES
FOR EACH ROW
BEGIN
    SELECT quiz_seq.NEXTVAL INTO :NEW.quiz_id FROM dual;
END;
/

-- ===== CREATE QUESTIONS TABLE =====
CREATE TABLE QUESTIONS (
    question_id NUMBER PRIMARY KEY,
    quiz_id NUMBER REFERENCES QUIZZES(quiz_id),
    question_text VARCHAR2(500),
    option_a VARCHAR2(200),
    option_b VARCHAR2(200),
    option_c VARCHAR2(200),
    option_d VARCHAR2(200),
    correct_option VARCHAR2(200)
);
CREATE SEQUENCE question_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER trg_question_id
BEFORE INSERT ON QUESTIONS
FOR EACH ROW
BEGIN
    SELECT question_seq.NEXTVAL INTO :NEW.question_id FROM dual;
END;
/

-- ===== CREATE RESULTS TABLE =====
CREATE TABLE RESULTS (
    result_id NUMBER PRIMARY KEY,
    student_id NUMBER REFERENCES STUDENTS(student_id),
    quiz_id NUMBER REFERENCES QUIZZES(quiz_id),
    score NUMBER,
    attempt_date DATE
);
CREATE SEQUENCE result_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER trg_result_id
BEFORE INSERT ON RESULTS
FOR EACH ROW
BEGIN
    SELECT result_seq.NEXTVAL INTO :NEW.result_id FROM dual;
END;
/




